steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'europe-docker.pkg.dev/$PROJECT_ID/eu.gcr.io/prod/crm-backend:$SHORT_SHA', '.' ]

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'europe-docker.pkg.dev/$PROJECT_ID/eu.gcr.io/prod/crm-backend:$SHORT_SHA' ]

  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [ 'run', 'deploy', 'crm-backend',
            '--image', 'europe-docker.pkg.dev/$PROJECT_ID/eu.gcr.io/prod/crm-backend:$SHORT_SHA',
            '--region', 'europe-west1',
            '--min-instances', '0',
            '--max-instances', '1',
            '--cpu', '2',
            '--memory', '2048Mi',
            '--concurrency', 'default',
            '--timeout', '1m',
            '--allow-unauthenticated',
            '--cpu-throttling',
            '--port', '8080',
            '--set-cloudsql-instances', 'innowork-427110:europe-west3:inno-work-db',
            '--env-vars-file', 'gcloud_build/stage_env.yml',
            '--set-secrets', '^|^DB_PASSWORD=STAGE__CRM_DATABASE_PASSWORD:latest|
            STORAGE_GCS_CREDENTIALS=STAGE__CRM_STORAGE_PASSWORD:latest|
            SECRET=STAGE__CRM_SECRET:latest'
    ]

images:
  - europe-docker.pkg.dev/$PROJECT_ID/eu.gcr.io/prod/crm-backend:$SHORT_SHA
options:
  logging: CLOUD_LOGGING_ONLY
